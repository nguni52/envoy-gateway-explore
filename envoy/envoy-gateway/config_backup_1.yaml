apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: eg
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: eg
spec:
  gatewayClassName: eg
  listeners:
    - name: http
      protocol: HTTP
      port: 8080
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: backend
  namespace: envoy-gateway-system
spec:
  parentRefs:
    - name: eg
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - group: ""
          kind: Service
          name: test-backend
          port: 8090
---
apiVersion: v1
kind: Service
metadata:
  name: external-backend
  namespace: envoy-gateway-system
spec:
  type: ExternalName
  externalName: 192.168.1.118
  ports:
    - port: 8090
      targetPort: 8090
      protocol: TCP
---
apiVersion: v1
kind: Endpoints
metadata:
  name: external-backend
  namespace: envoy-gateway-system
subsets:
  - addresses:
      - ip: 192.168.1.118
    ports:
      - port: 8090
        protocol: TCP
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: SecurityPolicy
metadata:
  name: oauth2-policy
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: backend
  oidc:
    provider:
      backendRefs:
      - name: backend-keycloak
        port: 8085
      backendSettings:
        retry:
          numRetries: 3
          perRetry:
            backOff:
              baseInterval: 1s
              maxInterval: 5s
          retryOn:
            triggers: ["5xx", "gateway-error", "reset"]
      issuer: "http://localhost:8085/realms/envoy-gateway-client-1"
      authorizationEndpoint: "http://localhost:8085/realms/envoy-gateway-client-1/protocol/openid-connect/auth"
      tokenEndpoint: "http://localhost:8085/realms/envoy-gateway-client-1/protocol/openid-connect/token"
    clientID: "envoy-gateway-client-1"
    clientSecret: 
      name: "envoy-gateway-client-secret-1"
    redirectURL: "http://localhost:8080/api/oauth2/callback"
    scopes:
      - "openid"
      - "profile"
      - "email"
  authorization:
    defaultAction: Deny
    rules:
    - action: Allow
      principal:
        clientCIDRs:
        - 172.18.0.1/32
        - 192.168.1.0/24
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: Backend
metadata:
  name: backend-keycloak
spec:
  endpoints:
    - ip:
        address: 192.168.1.118
        port: 8085
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: BackendTrafficPolicy
metadata:
  name: default-ipv-policy
  namespace: default
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: Gateway
    name: eg
  rateLimit:
    type: Local
    local:
      rules:
      - clientSelectors:
        limit:
          requests: 3
          unit: Hour
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: BackendTrafficPolicy
metadata:
  name: ipv6-support-policy
  namespace: default
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: ipv6-route
  rateLimit:
    type: Local
    local:
      rules:
      - clientSelectors:
        limit:
          requests: 3
          unit: Hour
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: Backend
metadata:
  name: test-backend
spec:
  appProtocols: 
    - gateway.envoyproxy.io/h2c
  endpoints:
    - unix:
        path: /var/run/test-backend.sock   
    - ip:
        address: 192.168.1.118
        port: 8090

